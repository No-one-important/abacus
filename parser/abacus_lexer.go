// Code generated from /home/vikimaster2/Projects/Go/abacus/Abacus.g4 by ANTLR 4.9.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 35, 234,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 3,
	2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17,
	3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3,
	21, 3, 22, 3, 22, 3, 22, 5, 22, 160, 10, 22, 3, 23, 3, 23, 3, 24, 3, 24,
	3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3,
	30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 5, 30, 182, 10, 30, 3, 31, 3, 31,
	3, 31, 5, 31, 187, 10, 31, 3, 31, 5, 31, 190, 10, 31, 3, 32, 3, 32, 3,
	33, 6, 33, 195, 10, 33, 13, 33, 14, 33, 196, 3, 33, 3, 33, 6, 33, 201,
	10, 33, 13, 33, 14, 33, 202, 5, 33, 205, 10, 33, 3, 34, 3, 34, 7, 34, 209,
	10, 34, 12, 34, 14, 34, 212, 11, 34, 3, 35, 3, 35, 7, 35, 216, 10, 35,
	12, 35, 14, 35, 219, 11, 35, 3, 36, 5, 36, 222, 10, 36, 3, 37, 3, 37, 5,
	37, 226, 10, 37, 3, 38, 6, 38, 229, 10, 38, 13, 38, 14, 38, 230, 3, 38,
	3, 38, 2, 2, 39, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19,
	11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37,
	20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55,
	29, 57, 30, 59, 31, 61, 32, 63, 2, 65, 2, 67, 33, 69, 34, 71, 2, 73, 2,
	75, 35, 3, 2, 6, 4, 2, 71, 71, 103, 103, 4, 2, 45, 45, 47, 47, 4, 2, 97,
	97, 99, 124, 5, 2, 11, 12, 15, 15, 34, 34, 2, 241, 2, 3, 3, 2, 2, 2, 2,
	5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2,
	13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2,
	2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2,
	2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2,
	2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3,
	2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51,
	3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2,
	59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2,
	2, 75, 3, 2, 2, 2, 3, 77, 3, 2, 2, 2, 5, 79, 3, 2, 2, 2, 7, 84, 3, 2, 2,
	2, 9, 87, 3, 2, 2, 2, 11, 91, 3, 2, 2, 2, 13, 96, 3, 2, 2, 2, 15, 102,
	3, 2, 2, 2, 17, 108, 3, 2, 2, 2, 19, 113, 3, 2, 2, 2, 21, 117, 3, 2, 2,
	2, 23, 121, 3, 2, 2, 2, 25, 125, 3, 2, 2, 2, 27, 129, 3, 2, 2, 2, 29, 135,
	3, 2, 2, 2, 31, 139, 3, 2, 2, 2, 33, 143, 3, 2, 2, 2, 35, 147, 3, 2, 2,
	2, 37, 149, 3, 2, 2, 2, 39, 151, 3, 2, 2, 2, 41, 153, 3, 2, 2, 2, 43, 159,
	3, 2, 2, 2, 45, 161, 3, 2, 2, 2, 47, 163, 3, 2, 2, 2, 49, 165, 3, 2, 2,
	2, 51, 167, 3, 2, 2, 2, 53, 169, 3, 2, 2, 2, 55, 171, 3, 2, 2, 2, 57, 173,
	3, 2, 2, 2, 59, 181, 3, 2, 2, 2, 61, 183, 3, 2, 2, 2, 63, 191, 3, 2, 2,
	2, 65, 194, 3, 2, 2, 2, 67, 206, 3, 2, 2, 2, 69, 213, 3, 2, 2, 2, 71, 221,
	3, 2, 2, 2, 73, 225, 3, 2, 2, 2, 75, 228, 3, 2, 2, 2, 77, 78, 7, 46, 2,
	2, 78, 4, 3, 2, 2, 2, 79, 80, 7, 117, 2, 2, 80, 81, 7, 115, 2, 2, 81, 82,
	7, 116, 2, 2, 82, 83, 7, 118, 2, 2, 83, 6, 3, 2, 2, 2, 84, 85, 7, 110,
	2, 2, 85, 86, 7, 112, 2, 2, 86, 8, 3, 2, 2, 2, 87, 88, 7, 110, 2, 2, 88,
	89, 7, 113, 2, 2, 89, 90, 7, 105, 2, 2, 90, 10, 3, 2, 2, 2, 91, 92, 7,
	110, 2, 2, 92, 93, 7, 113, 2, 2, 93, 94, 7, 105, 2, 2, 94, 95, 7, 52, 2,
	2, 95, 12, 3, 2, 2, 2, 96, 97, 7, 110, 2, 2, 97, 98, 7, 113, 2, 2, 98,
	99, 7, 105, 2, 2, 99, 100, 7, 51, 2, 2, 100, 101, 7, 50, 2, 2, 101, 14,
	3, 2, 2, 2, 102, 103, 7, 104, 2, 2, 103, 104, 7, 110, 2, 2, 104, 105, 7,
	113, 2, 2, 105, 106, 7, 113, 2, 2, 106, 107, 7, 116, 2, 2, 107, 16, 3,
	2, 2, 2, 108, 109, 7, 101, 2, 2, 109, 110, 7, 103, 2, 2, 110, 111, 7, 107,
	2, 2, 111, 112, 7, 110, 2, 2, 112, 18, 3, 2, 2, 2, 113, 114, 7, 103, 2,
	2, 114, 115, 7, 122, 2, 2, 115, 116, 7, 114, 2, 2, 116, 20, 3, 2, 2, 2,
	117, 118, 7, 117, 2, 2, 118, 119, 7, 107, 2, 2, 119, 120, 7, 112, 2, 2,
	120, 22, 3, 2, 2, 2, 121, 122, 7, 101, 2, 2, 122, 123, 7, 113, 2, 2, 123,
	124, 7, 117, 2, 2, 124, 24, 3, 2, 2, 2, 125, 126, 7, 118, 2, 2, 126, 127,
	7, 99, 2, 2, 127, 128, 7, 112, 2, 2, 128, 26, 3, 2, 2, 2, 129, 130, 7,
	116, 2, 2, 130, 131, 7, 113, 2, 2, 131, 132, 7, 119, 2, 2, 132, 133, 7,
	112, 2, 2, 133, 134, 7, 102, 2, 2, 134, 28, 3, 2, 2, 2, 135, 136, 7, 111,
	2, 2, 136, 137, 7, 107, 2, 2, 137, 138, 7, 112, 2, 2, 138, 30, 3, 2, 2,
	2, 139, 140, 7, 111, 2, 2, 140, 141, 7, 99, 2, 2, 141, 142, 7, 122, 2,
	2, 142, 32, 3, 2, 2, 2, 143, 144, 7, 99, 2, 2, 144, 145, 7, 120, 2, 2,
	145, 146, 7, 105, 2, 2, 146, 34, 3, 2, 2, 2, 147, 148, 7, 63, 2, 2, 148,
	36, 3, 2, 2, 2, 149, 150, 7, 62, 2, 2, 150, 38, 3, 2, 2, 2, 151, 152, 7,
	64, 2, 2, 152, 40, 3, 2, 2, 2, 153, 154, 7, 47, 2, 2, 154, 155, 7, 64,
	2, 2, 155, 42, 3, 2, 2, 2, 156, 160, 7, 96, 2, 2, 157, 158, 7, 44, 2, 2,
	158, 160, 7, 44, 2, 2, 159, 156, 3, 2, 2, 2, 159, 157, 3, 2, 2, 2, 160,
	44, 3, 2, 2, 2, 161, 162, 7, 44, 2, 2, 162, 46, 3, 2, 2, 2, 163, 164, 7,
	49, 2, 2, 164, 48, 3, 2, 2, 2, 165, 166, 7, 45, 2, 2, 166, 50, 3, 2, 2,
	2, 167, 168, 7, 47, 2, 2, 168, 52, 3, 2, 2, 2, 169, 170, 7, 48, 2, 2, 170,
	54, 3, 2, 2, 2, 171, 172, 7, 42, 2, 2, 172, 56, 3, 2, 2, 2, 173, 174, 7,
	43, 2, 2, 174, 58, 3, 2, 2, 2, 175, 176, 7, 114, 2, 2, 176, 182, 7, 107,
	2, 2, 177, 182, 7, 103, 2, 2, 178, 179, 7, 114, 2, 2, 179, 180, 7, 106,
	2, 2, 180, 182, 7, 107, 2, 2, 181, 175, 3, 2, 2, 2, 181, 177, 3, 2, 2,
	2, 181, 178, 3, 2, 2, 2, 182, 60, 3, 2, 2, 2, 183, 189, 5, 65, 33, 2, 184,
	186, 9, 2, 2, 2, 185, 187, 5, 63, 32, 2, 186, 185, 3, 2, 2, 2, 186, 187,
	3, 2, 2, 2, 187, 188, 3, 2, 2, 2, 188, 190, 5, 65, 33, 2, 189, 184, 3,
	2, 2, 2, 189, 190, 3, 2, 2, 2, 190, 62, 3, 2, 2, 2, 191, 192, 9, 3, 2,
	2, 192, 64, 3, 2, 2, 2, 193, 195, 4, 50, 59, 2, 194, 193, 3, 2, 2, 2, 195,
	196, 3, 2, 2, 2, 196, 194, 3, 2, 2, 2, 196, 197, 3, 2, 2, 2, 197, 204,
	3, 2, 2, 2, 198, 200, 5, 53, 27, 2, 199, 201, 4, 50, 59, 2, 200, 199, 3,
	2, 2, 2, 201, 202, 3, 2, 2, 2, 202, 200, 3, 2, 2, 2, 202, 203, 3, 2, 2,
	2, 203, 205, 3, 2, 2, 2, 204, 198, 3, 2, 2, 2, 204, 205, 3, 2, 2, 2, 205,
	66, 3, 2, 2, 2, 206, 210, 5, 71, 36, 2, 207, 209, 5, 73, 37, 2, 208, 207,
	3, 2, 2, 2, 209, 212, 3, 2, 2, 2, 210, 208, 3, 2, 2, 2, 210, 211, 3, 2,
	2, 2, 211, 68, 3, 2, 2, 2, 212, 210, 3, 2, 2, 2, 213, 217, 4, 67, 92, 2,
	214, 216, 5, 73, 37, 2, 215, 214, 3, 2, 2, 2, 216, 219, 3, 2, 2, 2, 217,
	215, 3, 2, 2, 2, 217, 218, 3, 2, 2, 2, 218, 70, 3, 2, 2, 2, 219, 217, 3,
	2, 2, 2, 220, 222, 9, 4, 2, 2, 221, 220, 3, 2, 2, 2, 222, 72, 3, 2, 2,
	2, 223, 226, 5, 71, 36, 2, 224, 226, 4, 50, 59, 2, 225, 223, 3, 2, 2, 2,
	225, 224, 3, 2, 2, 2, 226, 74, 3, 2, 2, 2, 227, 229, 9, 5, 2, 2, 228, 227,
	3, 2, 2, 2, 229, 230, 3, 2, 2, 2, 230, 228, 3, 2, 2, 2, 230, 231, 3, 2,
	2, 2, 231, 232, 3, 2, 2, 2, 232, 233, 8, 38, 2, 2, 233, 76, 3, 2, 2, 2,
	15, 2, 159, 181, 186, 189, 196, 202, 204, 210, 217, 221, 225, 230, 3, 8,
	2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "','", "'sqrt'", "'ln'", "'log'", "'log2'", "'log10'", "'floor'", "'ceil'",
	"'exp'", "'sin'", "'cos'", "'tan'", "'round'", "'min'", "'max'", "'avg'",
	"'='", "'<'", "'>'", "'->'", "", "'*'", "'/'", "'+'", "'-'", "'.'", "'('",
	"')'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "EQ",
	"LS", "GR", "ARROW", "POW", "MUL", "DIV", "ADD", "SUB", "POINT", "LPAREN",
	"RPAREN", "CONSTANT", "SCIENTIFIC_NUMBER", "VARIABLE", "LAMBDA_VARIABLE",
	"WHITESPACE",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "EQ", "LS",
	"GR", "ARROW", "POW", "MUL", "DIV", "ADD", "SUB", "POINT", "LPAREN", "RPAREN",
	"CONSTANT", "SCIENTIFIC_NUMBER", "SIGN", "NUMBER", "VARIABLE", "LAMBDA_VARIABLE",
	"VALID_ID_START", "VALID_ID_CHAR", "WHITESPACE",
}

type AbacusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewAbacusLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *AbacusLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewAbacusLexer(input antlr.CharStream) *AbacusLexer {
	l := new(AbacusLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Abacus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// AbacusLexer tokens.
const (
	AbacusLexerT__0              = 1
	AbacusLexerT__1              = 2
	AbacusLexerT__2              = 3
	AbacusLexerT__3              = 4
	AbacusLexerT__4              = 5
	AbacusLexerT__5              = 6
	AbacusLexerT__6              = 7
	AbacusLexerT__7              = 8
	AbacusLexerT__8              = 9
	AbacusLexerT__9              = 10
	AbacusLexerT__10             = 11
	AbacusLexerT__11             = 12
	AbacusLexerT__12             = 13
	AbacusLexerT__13             = 14
	AbacusLexerT__14             = 15
	AbacusLexerT__15             = 16
	AbacusLexerEQ                = 17
	AbacusLexerLS                = 18
	AbacusLexerGR                = 19
	AbacusLexerARROW             = 20
	AbacusLexerPOW               = 21
	AbacusLexerMUL               = 22
	AbacusLexerDIV               = 23
	AbacusLexerADD               = 24
	AbacusLexerSUB               = 25
	AbacusLexerPOINT             = 26
	AbacusLexerLPAREN            = 27
	AbacusLexerRPAREN            = 28
	AbacusLexerCONSTANT          = 29
	AbacusLexerSCIENTIFIC_NUMBER = 30
	AbacusLexerVARIABLE          = 31
	AbacusLexerLAMBDA_VARIABLE   = 32
	AbacusLexerWHITESPACE        = 33
)

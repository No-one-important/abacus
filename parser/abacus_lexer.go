// Code generated from /home/vikimaster2/Projects/Go/abacus/Abacus.g4 by ANTLR 4.9.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 32, 214,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3,
	8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11,
	3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16,
	3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3,
	20, 5, 20, 147, 10, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24,
	3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 5, 28, 169, 10, 28, 3, 29, 3, 29, 3, 29, 5, 29, 174,
	10, 29, 3, 29, 5, 29, 177, 10, 29, 3, 30, 3, 30, 3, 31, 6, 31, 182, 10,
	31, 13, 31, 14, 31, 183, 3, 31, 3, 31, 6, 31, 188, 10, 31, 13, 31, 14,
	31, 189, 5, 31, 192, 10, 31, 3, 32, 3, 32, 7, 32, 196, 10, 32, 12, 32,
	14, 32, 199, 11, 32, 3, 33, 5, 33, 202, 10, 33, 3, 34, 3, 34, 5, 34, 206,
	10, 34, 3, 35, 6, 35, 209, 10, 35, 13, 35, 14, 35, 210, 3, 35, 3, 35, 2,
	2, 36, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21,
	12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39,
	21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57,
	30, 59, 2, 61, 2, 63, 31, 65, 2, 67, 2, 69, 32, 3, 2, 6, 4, 2, 71, 71,
	103, 103, 4, 2, 45, 45, 47, 47, 5, 2, 67, 92, 97, 97, 99, 124, 5, 2, 11,
	12, 15, 15, 34, 34, 2, 220, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3,
	2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15,
	3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2,
	23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2,
	2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2,
	2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2,
	2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3,
	2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 69,
	3, 2, 2, 2, 3, 71, 3, 2, 2, 2, 5, 76, 3, 2, 2, 2, 7, 79, 3, 2, 2, 2, 9,
	83, 3, 2, 2, 2, 11, 88, 3, 2, 2, 2, 13, 94, 3, 2, 2, 2, 15, 100, 3, 2,
	2, 2, 17, 105, 3, 2, 2, 2, 19, 109, 3, 2, 2, 2, 21, 113, 3, 2, 2, 2, 23,
	117, 3, 2, 2, 2, 25, 121, 3, 2, 2, 2, 27, 127, 3, 2, 2, 2, 29, 129, 3,
	2, 2, 2, 31, 133, 3, 2, 2, 2, 33, 137, 3, 2, 2, 2, 35, 139, 3, 2, 2, 2,
	37, 141, 3, 2, 2, 2, 39, 146, 3, 2, 2, 2, 41, 148, 3, 2, 2, 2, 43, 150,
	3, 2, 2, 2, 45, 152, 3, 2, 2, 2, 47, 154, 3, 2, 2, 2, 49, 156, 3, 2, 2,
	2, 51, 158, 3, 2, 2, 2, 53, 160, 3, 2, 2, 2, 55, 168, 3, 2, 2, 2, 57, 170,
	3, 2, 2, 2, 59, 178, 3, 2, 2, 2, 61, 181, 3, 2, 2, 2, 63, 193, 3, 2, 2,
	2, 65, 201, 3, 2, 2, 2, 67, 205, 3, 2, 2, 2, 69, 208, 3, 2, 2, 2, 71, 72,
	7, 117, 2, 2, 72, 73, 7, 115, 2, 2, 73, 74, 7, 116, 2, 2, 74, 75, 7, 118,
	2, 2, 75, 4, 3, 2, 2, 2, 76, 77, 7, 110, 2, 2, 77, 78, 7, 112, 2, 2, 78,
	6, 3, 2, 2, 2, 79, 80, 7, 110, 2, 2, 80, 81, 7, 113, 2, 2, 81, 82, 7, 105,
	2, 2, 82, 8, 3, 2, 2, 2, 83, 84, 7, 110, 2, 2, 84, 85, 7, 113, 2, 2, 85,
	86, 7, 105, 2, 2, 86, 87, 7, 52, 2, 2, 87, 10, 3, 2, 2, 2, 88, 89, 7, 110,
	2, 2, 89, 90, 7, 113, 2, 2, 90, 91, 7, 105, 2, 2, 91, 92, 7, 51, 2, 2,
	92, 93, 7, 50, 2, 2, 93, 12, 3, 2, 2, 2, 94, 95, 7, 104, 2, 2, 95, 96,
	7, 110, 2, 2, 96, 97, 7, 113, 2, 2, 97, 98, 7, 113, 2, 2, 98, 99, 7, 116,
	2, 2, 99, 14, 3, 2, 2, 2, 100, 101, 7, 101, 2, 2, 101, 102, 7, 103, 2,
	2, 102, 103, 7, 107, 2, 2, 103, 104, 7, 110, 2, 2, 104, 16, 3, 2, 2, 2,
	105, 106, 7, 103, 2, 2, 106, 107, 7, 122, 2, 2, 107, 108, 7, 114, 2, 2,
	108, 18, 3, 2, 2, 2, 109, 110, 7, 117, 2, 2, 110, 111, 7, 107, 2, 2, 111,
	112, 7, 112, 2, 2, 112, 20, 3, 2, 2, 2, 113, 114, 7, 101, 2, 2, 114, 115,
	7, 113, 2, 2, 115, 116, 7, 117, 2, 2, 116, 22, 3, 2, 2, 2, 117, 118, 7,
	118, 2, 2, 118, 119, 7, 99, 2, 2, 119, 120, 7, 112, 2, 2, 120, 24, 3, 2,
	2, 2, 121, 122, 7, 116, 2, 2, 122, 123, 7, 113, 2, 2, 123, 124, 7, 119,
	2, 2, 124, 125, 7, 112, 2, 2, 125, 126, 7, 102, 2, 2, 126, 26, 3, 2, 2,
	2, 127, 128, 7, 46, 2, 2, 128, 28, 3, 2, 2, 2, 129, 130, 7, 111, 2, 2,
	130, 131, 7, 107, 2, 2, 131, 132, 7, 112, 2, 2, 132, 30, 3, 2, 2, 2, 133,
	134, 7, 111, 2, 2, 134, 135, 7, 99, 2, 2, 135, 136, 7, 122, 2, 2, 136,
	32, 3, 2, 2, 2, 137, 138, 7, 63, 2, 2, 138, 34, 3, 2, 2, 2, 139, 140, 7,
	62, 2, 2, 140, 36, 3, 2, 2, 2, 141, 142, 7, 64, 2, 2, 142, 38, 3, 2, 2,
	2, 143, 147, 7, 96, 2, 2, 144, 145, 7, 44, 2, 2, 145, 147, 7, 44, 2, 2,
	146, 143, 3, 2, 2, 2, 146, 144, 3, 2, 2, 2, 147, 40, 3, 2, 2, 2, 148, 149,
	7, 44, 2, 2, 149, 42, 3, 2, 2, 2, 150, 151, 7, 49, 2, 2, 151, 44, 3, 2,
	2, 2, 152, 153, 7, 45, 2, 2, 153, 46, 3, 2, 2, 2, 154, 155, 7, 47, 2, 2,
	155, 48, 3, 2, 2, 2, 156, 157, 7, 48, 2, 2, 157, 50, 3, 2, 2, 2, 158, 159,
	7, 42, 2, 2, 159, 52, 3, 2, 2, 2, 160, 161, 7, 43, 2, 2, 161, 54, 3, 2,
	2, 2, 162, 163, 7, 114, 2, 2, 163, 169, 7, 107, 2, 2, 164, 169, 7, 103,
	2, 2, 165, 166, 7, 114, 2, 2, 166, 167, 7, 106, 2, 2, 167, 169, 7, 107,
	2, 2, 168, 162, 3, 2, 2, 2, 168, 164, 3, 2, 2, 2, 168, 165, 3, 2, 2, 2,
	169, 56, 3, 2, 2, 2, 170, 176, 5, 61, 31, 2, 171, 173, 9, 2, 2, 2, 172,
	174, 5, 59, 30, 2, 173, 172, 3, 2, 2, 2, 173, 174, 3, 2, 2, 2, 174, 175,
	3, 2, 2, 2, 175, 177, 5, 61, 31, 2, 176, 171, 3, 2, 2, 2, 176, 177, 3,
	2, 2, 2, 177, 58, 3, 2, 2, 2, 178, 179, 9, 3, 2, 2, 179, 60, 3, 2, 2, 2,
	180, 182, 4, 50, 59, 2, 181, 180, 3, 2, 2, 2, 182, 183, 3, 2, 2, 2, 183,
	181, 3, 2, 2, 2, 183, 184, 3, 2, 2, 2, 184, 191, 3, 2, 2, 2, 185, 187,
	5, 49, 25, 2, 186, 188, 4, 50, 59, 2, 187, 186, 3, 2, 2, 2, 188, 189, 3,
	2, 2, 2, 189, 187, 3, 2, 2, 2, 189, 190, 3, 2, 2, 2, 190, 192, 3, 2, 2,
	2, 191, 185, 3, 2, 2, 2, 191, 192, 3, 2, 2, 2, 192, 62, 3, 2, 2, 2, 193,
	197, 5, 65, 33, 2, 194, 196, 5, 67, 34, 2, 195, 194, 3, 2, 2, 2, 196, 199,
	3, 2, 2, 2, 197, 195, 3, 2, 2, 2, 197, 198, 3, 2, 2, 2, 198, 64, 3, 2,
	2, 2, 199, 197, 3, 2, 2, 2, 200, 202, 9, 4, 2, 2, 201, 200, 3, 2, 2, 2,
	202, 66, 3, 2, 2, 2, 203, 206, 5, 65, 33, 2, 204, 206, 4, 50, 59, 2, 205,
	203, 3, 2, 2, 2, 205, 204, 3, 2, 2, 2, 206, 68, 3, 2, 2, 2, 207, 209, 9,
	5, 2, 2, 208, 207, 3, 2, 2, 2, 209, 210, 3, 2, 2, 2, 210, 208, 3, 2, 2,
	2, 210, 211, 3, 2, 2, 2, 211, 212, 3, 2, 2, 2, 212, 213, 8, 35, 2, 2, 213,
	70, 3, 2, 2, 2, 14, 2, 146, 168, 173, 176, 183, 189, 191, 197, 201, 205,
	210, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'sqrt'", "'ln'", "'log'", "'log2'", "'log10'", "'floor'", "'ceil'",
	"'exp'", "'sin'", "'cos'", "'tan'", "'round'", "','", "'min'", "'max'",
	"'='", "'<'", "'>'", "", "'*'", "'/'", "'+'", "'-'", "'.'", "'('", "')'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "EQ", "LS",
	"GR", "POW", "MUL", "DIV", "ADD", "SUB", "POINT", "LPAREN", "RPAREN", "CONSTANT",
	"SCIENTIFIC_NUMBER", "VARIABLE", "WHITESPACE",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "EQ", "LS", "GR",
	"POW", "MUL", "DIV", "ADD", "SUB", "POINT", "LPAREN", "RPAREN", "CONSTANT",
	"SCIENTIFIC_NUMBER", "SIGN", "NUMBER", "VARIABLE", "VALID_ID_START", "VALID_ID_CHAR",
	"WHITESPACE",
}

type AbacusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewAbacusLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *AbacusLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewAbacusLexer(input antlr.CharStream) *AbacusLexer {
	l := new(AbacusLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Abacus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// AbacusLexer tokens.
const (
	AbacusLexerT__0              = 1
	AbacusLexerT__1              = 2
	AbacusLexerT__2              = 3
	AbacusLexerT__3              = 4
	AbacusLexerT__4              = 5
	AbacusLexerT__5              = 6
	AbacusLexerT__6              = 7
	AbacusLexerT__7              = 8
	AbacusLexerT__8              = 9
	AbacusLexerT__9              = 10
	AbacusLexerT__10             = 11
	AbacusLexerT__11             = 12
	AbacusLexerT__12             = 13
	AbacusLexerT__13             = 14
	AbacusLexerT__14             = 15
	AbacusLexerEQ                = 16
	AbacusLexerLS                = 17
	AbacusLexerGR                = 18
	AbacusLexerPOW               = 19
	AbacusLexerMUL               = 20
	AbacusLexerDIV               = 21
	AbacusLexerADD               = 22
	AbacusLexerSUB               = 23
	AbacusLexerPOINT             = 24
	AbacusLexerLPAREN            = 25
	AbacusLexerRPAREN            = 26
	AbacusLexerCONSTANT          = 27
	AbacusLexerSCIENTIFIC_NUMBER = 28
	AbacusLexerVARIABLE          = 29
	AbacusLexerWHITESPACE        = 30
)
